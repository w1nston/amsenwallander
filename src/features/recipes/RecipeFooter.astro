---
import FilterIcon from './FilterIcon.astro';
import FilterRecipesDialog from './FilterRecipesDialog.astro';

let { availableTags, recipeListId } = Astro.props;

const dialogId = 'filter-dialog';
const FILTER_EVENT = 'filterEvent';
---

<FilterRecipesDialog
  id={dialogId}
  availableTags={availableTags}
  eventName={FILTER_EVENT}
/>

<footer>
  <button id="filter-bnt">
    <FilterIcon />
  </button>
</footer>

<script define:vars={{ availableTags, dialogId, filterEvent: FILTER_EVENT, recipeListId }}>
  let dialogElem = document.getElementById(dialogId);


  let filterButton = document.getElementById('filter-bnt');
  if (filterButton) {
    filterButton.addEventListener('click', () => {
      dialogElem.showModal();

      document.body.classList.add('no-scroll');
    });
  }
  
  // TODO: need button next to filter to clear selected filter!

  if (dialogElem) {
    dialogElem.addEventListener(filterEvent, function handleFilter(event) {
      let filter = event.detail.value;

      let recipeListElem = document.getElementById(recipeListId);
      if (recipeListElem) {
        let recipes = Array.from(recipeListElem.children);
        recipes.forEach((recipe) => {
          let tags = recipe.dataset.tags.split(';');

          if (filter === '') {
            recipe.style.display = '';
          } else {
            recipe.style.display = tags.includes(filter) ? '' : 'none';
          }
        });
      } else {
        console.warn(`Could not find a recipe list with the id: ${recipeListId}!`);
      }
    });
  }
</script>

<style>
    footer {
        background-color: var(--surface-color);
        color: var(--surface-text-color);
        height: 3.75rem;
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
        padding: 0 1rem;
    }

    button {
        all: unset;
        background-color: var(--white);
        color: var(--surface-color);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        width: 32px;
        height: 32px;
        border-radius: 16px;
    }
</style>